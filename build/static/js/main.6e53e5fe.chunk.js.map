{"version":3,"sources":["axios.js","Row.js","requests.js","Logo.js","Search.js","UserProfile.js","Navbar.js","Herobutton.js","Banner1.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Logo","version","transform","d","style","fill","fillOpacity","fillRule","stroke","Search","type","placeholder","UserProfile","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","Herobutton","primary","text","href","data-primary","Banner1","str","n","setMovie","Math","floor","random","length","backgroundImage","original_name","overview","substr","App","counterSlice","createSlice","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e53e5fe.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\", //so you dont have to type the entire url everytime\n});\n\nexport default instance; ","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  // A snippet of code which runs based on a specific condition/variable\n  useEffect(() => {\n    // if [], run once when the row loads, and don't run it again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;","const API_KEY = \"f4f37c2693984994e51decc1a0858a26\"; //My API Key\n\n//Following are the TMDB Reuqests. These will be concatenated with the base url upon request\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  }\n  \n  export default requests;\n","import React from 'react'\n\nfunction Logo() {\n    return (\n            \t\t\t<div id=\"logo\" className=\"Logo\">\n\t\t\t\t<svg version=\"1.1\" width=\"300\" height=\"81.386726\" id=\"svg3262\">\n\t\t\t\t\t<g transform=\"translate(-384.28572,-428.81172)\" id=\"layer1\">\n\t\t\t\t\t\t<g transform=\"matrix(2.5445375,0,0,2.5445375,1157.1714,-1457.8678)\" id=\"g3235\">\n\t\t\t\t\t\t\t<path d=\"m -203.09972,771.41415 c 1.6425,0.15875 3.2825,0.33 4.92,0.5075 l 3.615,-8.92625 3.43625,9.74875 c 1.76375,0.22125 3.525,0.4525 5.2825,0.695 l -6.02375,-17.09625 6.02625,-14.88 -5.10375,0 -0.0525,0.0725 -3.255,8.03875 -2.8575,-8.11125 -5.03875,0 5.2025,14.7625 -6.15125,15.18875 z\" id=\"path3015\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -206.91147,771.06478 0,-29.60125 -5.0375,0 0,29.18625 c 1.68125,0.12875 3.36125,0.26875 5.0375,0.415\" id=\"path3019\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -244.7486,769.4089 c 1.36,0 2.7175,0.01 4.07375,0.0213 l 0,-10.875 6.05125,0 0,-4.63125 -6.05125,0 0,-7.825 6.96875,0 0,-4.63625 -12.02625,0 0,27.95 c 0.3275,0 0.655,-0.004 0.98375,-0.004\" id=\"path3023\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -260.3881,769.69191 c 1.6775,-0.06 3.3575,-0.11 5.04,-0.15125 l 0,-23.44125 4.7075,0 0,-4.63625 -14.45625,0 0,4.63625 4.70875,0 0,23.5925 z\" id=\"path3035\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -298.91059,772.81378 0,-17.63625 5.96375,16.92375 c 1.83375,-0.20625 3.67125,-0.4 5.5125,-0.5825 l 0,-30.055 -4.8325,0 0,18.2675 -6.43625,-18.2675 -0.2075,0 -4.8325,0 0,31.98375 0.03,0 c 1.5975,-0.22125 3.19875,-0.43125 4.8025,-0.63375\" id=\"path3039\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -269.95297,746.09903 0,-4.63625 -12.0275,0 0,24.9125 0,4.6375 0,0.004 c 3.99125,-0.345 7.99625,-0.63375 12.0175,-0.86875 l 0,-0.004 0,-1.33625 0,-3.3 c -2.325,0.135 -4.645,0.29125 -6.96,0.46375 l 0,-7.415 6.05125,0 0,-4.63375 -6.05125,0 0,-7.82375 6.97,0 z\" id=\"path3051\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t\t<path d=\"m -223.72272,765.2864 0,-23.82375 -5.05875,0 0,23.605 0,4.63625 0,0.005 c 4.02375,0.1475 8.0325,0.35375 12.0275,0.6125 l 0,-0.006 0,-1.4975 0,-3.13875 c -2.31875,-0.15 -4.64125,-0.28 -6.96875,-0.3925\" id=\"path3055\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n       \n    )\n}\n\nexport default Logo\n","import React from 'react'\nimport './Banner1.css'\n\nfunction Search() {\n    return (\n        <div>\n            <form id=\"search\" className=\"Search\">\n\t\t\t\t<input type=\"search\" placeholder=\"Search for a title...\" />\n\t\t\t</form>\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nfunction UserProfile() {\n    return (\n\t\t\t<div className=\"UserProfile\">\n\t\t\t\t<div className=\"User\">\n\t\t\t\t\t<div className=\"name\">Stephen Onoja</div>\n\t\t\t\t\t<div className=\"image\"><img src=\"\t\nhttps://s3-us-west-2.amazonaws.com/bullseyeafrica/IMG_20160423_152328.jpg\" /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"UserProfile-menu\">\n\t\t\t\t\t<div className=\"UserProfileSwitch\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"UserProfile-image\">\n\t\t\t\t\t\t\t\t\t<img src=\"http://lorempixel.com/96/96\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"UserProfile-name\">\n\t\t\t\t\t\t\t\t\tAlexander\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"UserProfile-image\">\n\t\t\t\t\t\t\t\t\t<img src=\"http://lorempixel.com/96/96\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"UserProfile-name\">\n\t\t\t\t\t\t\t\t\tMattias\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"UserNavigation\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Your Account</li>\n\t\t\t\t\t\t\t<li>Help Center</li>\n\t\t\t\t\t\t\t<li>Sign out of Netflix</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n}\n\nexport default UserProfile\n","\nimport React, { useState, useEffect } from \"react\";\nimport './navbar.css'\nimport Logo from './Logo'\nimport Search from './Search'\nimport UserProfile from './UserProfile'\nimport './banner.css'\n\nfunction Navbar() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n        \n       <div className={`nav ${show && \"nav__black\"}`}>\n      \n\n\n      <header className=\"Header\">\n\t\t\t\t<Logo />\n                <div id=\"navigation\" className=\"Navigation\">\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Browse</li>\n\t\t\t\t\t\t<li>My list</li>\n\t\t\t\t\t\t<li>Top picks</li>\n\t\t\t\t\t\t<li>Recent</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t\t\t<Search />\n\t\t\t\t<UserProfile />\n\t\t\t</header>\n\n\n\n\n      </div>\n\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nfunction Herobutton({primary, text}) {\n    return (\n        <div>\n            <a href=\"#\" className=\"Button\" data-primary={primary}>{text}</a>\n        </div>\n    )\n}\n\nexport default Herobutton\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport './Banner1.css'\nimport requests from \"./requests\";\nimport Herobutton from './Herobutton'\nfunction Banner1() {\n\n    const [movie, setMovie] = useState([]); //movie is the name of the variable in state, setMovie is used to change state\n\n    useEffect(() => {\n\n        //async function will make sure that the remaining code runs while the functions fetches the requests in the background\n        async function fetchData() {\n            const request =  await axios.get(requests.fetchNetflixOriginals); \n            setMovie( \n                request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1) //Pick up a random movie\n             ]\n            );\n            return request;\n          }\n          fetchData();\n        }, []);\n\n    function truncate(str, n) {\n      return str?.length > n ? str.substr(0, n - 1) + \"...\" : str; //If string is present in api result, then if length is greater than length, dont print full. else print string\n    }\n\n    return (\n        <div id=\"hero\" className=\"Hero\" style={{backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`}}>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<h1>{movie?.title || movie?.name || movie?.original_name}</h1>\n\t\t\t\t\t<p>{truncate(movie?.overview, 150)}</p>\n\t\t\t\t\t<div className=\"button-wrapper\">\n\t\t\t\t\t\t<Herobutton primary={true} text=\"Watch now\" />\n\t\t\t\t\t\t<Herobutton primary={false} text=\"+ My list\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"overlay\"></div>\n\t\t\t</div>\n    )\n}\n\nexport default Banner1\n            ","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Row from \"./Row\";\r\nimport requests from \"./requests\";\r\nimport Banner from \"./Banner\";\r\nimport Navbar from \"./Navbar\";\r\nimport Banner1 from './Banner1'; \r\nimport Logo from './Logo';\r\nimport UserProfile from './UserProfile'\r\n \r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      <Navbar />\r\n\r\n      <Banner1 />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}